{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","props","value","search","onChange","change","Info","person","name","number","PersonForm","onSubmit","value1","onChange1","value2","onChange2","type","Notification","message","className","ErrorNotification","error","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","setMessage","setError","useEffect","personService","initialPersons","event","console","log","target","preventDefault","find","window","confirm","personId","returnedPerson","map","setTimeout","catch","concat","filter","toLowerCase","includes","filteredPerson","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.420dea3b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteId = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deleteId }","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\n\r\nconst Filter  = (props) => {\r\n    return (\r\n        <div>\r\n        filter shown with <input \r\n          value={props.search}\r\n          onChange={props.change} \r\n        />\r\n      </div>\r\n    )\r\n}\r\n\r\nconst Info  = ( {person} ) => {\r\n    return (\r\n      <div>\r\n        <p>\r\n        {person.name} {person.number}\r\n        </p>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.onSubmit}>\r\n        <div>\r\n          name: <input \r\n            value={props.value1}\r\n            onChange={props.onChange1} \r\n          />\r\n        </div>\r\n        <div>\r\n          number: <input \r\n            value={props.value2}\r\n            onChange={props.onChange2} \r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"message\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ErrorNotification = ({ error }) => {\r\n  if (error === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {error}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newSearch, setNewSearch ] = useState('')\r\n  const [ message, setMessage ] = useState(null)\r\n  const [ error, setError ] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const handleSearchChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewSearch(event.target.value)\r\n  }\r\n  \r\n  const handleNameChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    if (persons.find(person => person.name === newName)) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        const personId = persons.find(person => person.name === newName).id\r\n        const nameObject = {\r\n          name: newName,\r\n          number: newNumber\r\n        }\r\n        personService\r\n        .update(personId, nameObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.map(person => person.id !== personId ? person : returnedPerson))\r\n          setMessage(`'${newName}' was updated`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n      }\r\n    } else {\r\n      const nameObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      personService\r\n      .create(nameObject)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson))\r\n        setMessage(`'${newName}' was added`)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000)  \r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const deleteName = (id, name) => {\r\n    if (window.confirm(\"Delete \" + name + \"?\")) {\r\n      personService\r\n        .deleteId(id)\r\n        .then(() => {setPersons(persons.filter(person => person.id !== id),\r\n        setMessage(`'${name}' was deleted`),\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000))\r\n        })\r\n        .catch(() => {setError(\r\n          `Information of '${name}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setError(null)\r\n        }, 5000)\r\n        setPersons(persons.filter(person => person.id !== id))\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} />\r\n      <ErrorNotification error={error} />\r\n      <Filter change={handleSearchChange} search={newSearch} />\r\n      <h2>add a new</h2>\r\n      <PersonForm onSubmit={addName} value1={newName}\r\n            onChange1={handleNameChange} value2={newNumber}\r\n            onChange2={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      {persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase())).map(filteredPerson => ( \r\n        <ul>\r\n          <Info key={filteredPerson.name} person={filteredPerson} /> <button onClick={() => deleteName(filteredPerson.id, filteredPerson.name)}>delete</button>\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom';\nimport React from 'react'\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}